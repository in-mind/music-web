[{"E:\\前端\\每天学习react\\music-web\\music-web\\src\\index.tsx":"1","E:\\前端\\每天学习react\\music-web\\music-web\\src\\reportWebVitals.ts":"2","E:\\前端\\每天学习react\\music-web\\music-web\\src\\App.tsx":"3","E:\\前端\\每天学习react\\music-web\\music-web\\src\\router\\router.js":"4","E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\shellHeader\\index.tsx":"5","E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\ShellHeader\\index.tsx":"6","E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\FindMusic\\index.tsx":"7","E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\MyMusic\\index.tsx":"8","E:\\前端\\每天学习react\\music-web\\music-web\\src\\utils\\service.ts":"9","E:\\前端\\每天学习react\\music-web\\music-web\\src\\utils\\Modal\\ModalWrap.tsx":"10","E:\\前端\\每天学习react\\music-web\\music-web\\src\\utils\\Modal\\Modal.tsx":"11"},{"size":500,"mtime":1609247802360,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1609247802360,"results":"14","hashOfConfig":"13"},{"size":588,"mtime":1609519586026,"results":"15","hashOfConfig":"13"},{"size":258,"mtime":1609420304237,"results":"16","hashOfConfig":"13"},{"size":1470,"mtime":1609419818746,"results":"17","hashOfConfig":"13"},{"size":8071,"mtime":1610285409958,"results":"18","hashOfConfig":"13"},{"size":488,"mtime":1610289116962,"results":"19","hashOfConfig":"13"},{"size":224,"mtime":1609597138582,"results":"20","hashOfConfig":"13"},{"size":139,"mtime":1609443532090,"results":"21","hashOfConfig":"13"},{"size":603,"mtime":1609602913506,"results":"22","hashOfConfig":"13"},{"size":3266,"mtime":1609687719024,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ffbqzw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"E:\\前端\\每天学习react\\music-web\\music-web\\src\\index.tsx",[],["52","53"],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\reportWebVitals.ts",[],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\App.tsx",["54","55"],"import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport routes from './router/router';\nimport ShellHeader from './pages/ShellHeader';\nimport { FetchData } from './utils/service';\n\nfunction App() {\n  return (\n    <Router>\n      \n      <ShellHeader />\n\n      <Switch>\n        {\n          routes.map((ele, key) => (\n            <Route path={ele.path} key={key} exact={ele.exact}>\n             {ele.component}\n            </Route>\n          ))\n        }\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","E:\\前端\\每天学习react\\music-web\\music-web\\src\\router\\router.js",[],["56","57"],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\shellHeader\\index.tsx",["58"],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\ShellHeader\\index.tsx",["59","60","61","62"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from './shellHeader.module.scss';\r\nimport logo from '../../../public/logo.png';\r\nimport classNames from 'classnames';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport { FetchData } from '../../utils/service';\r\nimport Modal from '../../utils/Modal/Modal';\r\nimport platForm from '../../../public/platform.png';\r\nimport './modal.scss';\r\n\r\ninterface IMenu {\r\n  item: string,\r\n  path: string\r\n}\r\n\r\nconst MENU: IMenu[] = [\r\n  { item: '发现音乐', path: '/' },\r\n  { item: '我的音乐', path: '/my' }\r\n];\r\n\r\nconst suggestMap: any = {\r\n  songs: ['单曲', 'fa-music'],\r\n  artists: ['歌手', 'fa-user-o'],\r\n  albums: ['专辑', 'fa-dot-circle-o'],\r\n  playlists: ['歌单', 'fa-assistive-listening-systems'],\r\n}\r\n\r\nfunction ShellHeader() {\r\n\r\n  const history = useHistory();\r\n  const treatyCheckedEl: any = useRef(null);\r\n  const inputPhoneEl: any = useRef(null);\r\n  const inputPwdEl: any = useRef(null);\r\n  const [selectedIndex, setselectedIndex] = useState(0);\r\n  const [dropDownExpand, setDropDownExpand] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [suggestSearchData, setSuggestSearchData] = useState<any>([]);\r\n  const [showLoginModal, setShowLoginModal] = useState(false);\r\n  const [showPhoneLoginModal, setShowPhoneLoginModal] = useState(false);\r\n  const [phoneValue, setPhoneValue] = useState('');\r\n  const [pwdValue, setPwdValue] = useState('');\r\n  const loginTitle = '登录';\r\n  let treatyChecked = false;\r\n\r\n  const searchChange = async function (e: React.ChangeEvent<HTMLInputElement>) {\r\n    const searchValue = e.target.value;\r\n    setSearchValue(searchValue);\r\n    if (searchValue) {\r\n      const res: any = await FetchData(`http://localhost:3000/search/suggest?keywords=${searchValue}`, 'GET');\r\n      setSuggestSearchData(res.result);\r\n      setDropDownExpand(true);\r\n    } else {\r\n      setDropDownExpand(false);\r\n    }\r\n\r\n  }\r\n\r\n  const selectMenuItem = function (key: number, path: string): void {\r\n    setselectedIndex(key);\r\n    history.push(path)\r\n  }\r\n\r\n  const onConfirm = function () {\r\n    setShowLoginModal(false);\r\n  }\r\n\r\n  const onCancel = function () {\r\n    setShowLoginModal(false);\r\n  }\r\n\r\n  const goToSuggestDetailPage = function (e: React.MouseEvent<HTMLElement, MouseEvent>) {\r\n    e.stopPropagation();\r\n    console.log('goto detail page');\r\n  }\r\n\r\n  const handleSearchInputFocus = function (e: React.FocusEvent<HTMLInputElement>) {\r\n    function handleClick(e: React.FocusEvent<HTMLInputElement>) {\r\n      console.log('body')\r\n      e.stopPropagation();\r\n      setDropDownExpand(false);\r\n      document.body.removeEventListener('click', bindClick);\r\n    }\r\n    const bindClick = handleClick.bind(null, e);\r\n    document.body.addEventListener('click', bindClick);\r\n    searchValue && setDropDownExpand(true)\r\n  }\r\n\r\n  const goToPhoneLoginModal = function () {\r\n    treatyChecked = treatyCheckedEl.current.checked;\r\n    if (treatyChecked) {\r\n      setShowLoginModal(false);\r\n      setShowPhoneLoginModal(true);\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(inputPhoneEl.current && !inputPhoneEl.current.value) {\r\n      inputPhoneEl.current.style.border='1px solid red';\r\n    } else {\r\n\r\n    }\r\n  }, [inputPhoneEl])\r\n\r\n  const login = function() {\r\n    console.log(inputPhoneEl.current.value);\r\n    console.log(inputPwdEl.current.value)\r\n\r\n  }\r\n  console.log('init')\r\n\r\n  return (\r\n    <div className={styles.headerTop}>\r\n      <div className={styles.headerWrap}>\r\n        <div>\r\n          <img src={logo} alt=\"logo\" />\r\n        </div>\r\n        <div className={styles.headerText}>\r\n          网易云音乐\r\n        </div>\r\n        <div className={styles.headerMenu}>\r\n          {\r\n            MENU.map((ele, key) =>\r\n            (<div key={key}\r\n              className={classNames(styles.headerMenuItem, { [styles.headerMenuItemSelected]: key === selectedIndex })}\r\n              onClick={() => { selectMenuItem(key, ele.path) }}\r\n            >\r\n              {ele.item}\r\n              <div className={classNames({ [styles.selectedTri]: key === selectedIndex })}></div>\r\n            </div>)\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div className={styles.headerSearch}>\r\n          <label htmlFor=\"searchInput\"></label>\r\n          <input id=\"searchInput\" type=\"text\"\r\n            className={styles.headerInput}\r\n            placeholder=\"音乐/视频/电台/用户\"\r\n            onChange={(e) => { searchChange(e) }}\r\n            onFocus={(e) => { handleSearchInputFocus(e) }}\r\n            onClick={(e) => { e.stopPropagation(); }}\r\n          />\r\n          {\r\n            dropDownExpand &&\r\n            <div className={styles.dropDownWrap}>\r\n              <div className={styles.dropDownContentHeader}>\r\n                搜\"{searchValue}\"相关用户&gt;\r\n              </div>\r\n              <div className={styles.dropDownContentWrap}>\r\n                {\r\n                  suggestSearchData.order && suggestSearchData.order.map((ele: any, key: number) => (\r\n                    <div className={styles.dropDownContent} key={key}>\r\n                      <div className={styles.dropDownContentLeft}>\r\n                        <i className={`fa ${suggestMap[ele][1]}`}></i> &nbsp;\r\n                        {suggestMap[ele][0]}\r\n                      </div>\r\n                      <ul className={classNames(styles.dropDownContentRight, { [styles.dropDownContentRightTop]: key === 0 })}>\r\n                        {\r\n                          suggestSearchData[ele].map((item: any, key: number) => (\r\n                            <li onClick={(e) => { goToSuggestDetailPage(e) }} key={key}>\r\n                              {item.name}\r\n                            </li>\r\n                          ))\r\n                        }\r\n                      </ul>\r\n\r\n                    </div>\r\n\r\n                  ))\r\n                }\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        <div className={styles.loginText} onClick={() => { setShowLoginModal(true) }}>登录 </div>\r\n        <Modal\r\n          visible={showLoginModal}\r\n          onConfirm={onConfirm}\r\n          onCancle={onCancel}\r\n          title={loginTitle}\r\n        >\r\n          <div className=\"modal-content\">\r\n            <img src={platForm} alt=\"platform\" />\r\n            <button className=\"btn login-btn\" onClick={() => goToPhoneLoginModal()}> 手机号登录</button>\r\n            <button className=\"btn register-btn\">注&nbsp;册</button>\r\n            <div className=\"treatyStyle\">\r\n              <input type=\"checkbox\" ref={treatyCheckedEl} />\r\n              同意\r\n              <a href=\"https://st.music.163.com/official-terms/service\">《服务条款》</a>\r\n              <a href=\"https://st.music.163.com/official-terms/privacy\">《隐私政策》</a>\r\n              <a href=\"https://st.music.163.com/official-terms/children\">《儿童隐私政策》</a>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          visible={false}\r\n          onConfirm={onConfirm}\r\n          onCancle={onCancel}\r\n          title=\"手机号登录\"\r\n        >\r\n          <div className=\"modal-content-phone\">\r\n            <div className=\"phone-input-wrap\">\r\n              <label htmlFor=\"PhoneInput\"></label>\r\n              <input id=\"PhoneInput\" className=\"phone-input\" type=\"text\" placeholder=\"请输入手机号\" ref={inputPhoneEl} onChange={(e) => {setPhoneValue(e.target.value)}} />\r\n            </div>\r\n            <div className=\"pwd-input-wrap\">\r\n              <label htmlFor=\"PwdInput\"></label>\r\n              <input id=\"PwdInput\" className=\"pwd-input\" type=\"password\" placeholder=\"请输入密码\" ref={inputPwdEl} onChange={(e) => {setPwdValue(e.target.value)}} />\r\n            </div>\r\n            <div className=\"pwd-text\"><div>自动登录</div> <div>忘记密码</div></div>\r\n            <button className=\"btn login-btn\" onClick={() => {login()}}>登&nbsp;录</button>\r\n\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ShellHeader;","E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\FindMusic\\index.tsx",[],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\pages\\MyMusic\\index.tsx",[],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\utils\\service.ts",[],"E:\\前端\\每天学习react\\music-web\\music-web\\src\\utils\\Modal\\ModalWrap.tsx",["63","64","65"],"import classNames from 'classnames';\r\nimport React, { useEffect, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './modalWrap.module.scss';\r\n\r\n\r\nfunction ModalWrap(props:any) {\r\n\r\n  const {children} = props;\r\n  const node = document.createElement('div');\r\n  node.className = classNames(styles.modal)\r\n\r\n  useEffect(() => {\r\n    document.body.appendChild(node);\r\n    return () => {\r\n      console.log(12345)\r\n      document.body.removeChild(node)\r\n    }\r\n  }, [])\r\n  return (\r\n    ReactDOM.createPortal(\r\n     children,\r\n     node\r\n    )\r\n  )\r\n}\r\n\r\nexport default ModalWrap","E:\\前端\\每天学习react\\music-web\\music-web\\src\\utils\\Modal\\Modal.tsx",["66","67","68"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\r\nimport ModalWrap from './ModalWrap';\r\nimport styles from './modal.module.scss';\r\nimport classNames from 'classnames';\r\n\r\nfunction Modal(props: any) {\r\n\r\n  const { visible, title, children } = props;\r\n  const modalWrapEl = useRef<any>(null);\r\n  let clickClientX: number, clickClientY: number, diffX: number, diffY: number;\r\n  let movable = false;\r\n  const calWindowModalSize = () => ({\r\n    modalWidth: modalWrapEl.current.clientWidth,\r\n    modalHeight: modalWrapEl.current.clientHeight,\r\n    windowWidth: document.body.clientWidth,\r\n    windowHeight: document.body.clientHeight\r\n  })\r\n\r\n  function debounce(fn: Function, delay: number) {\r\n    let timer: any = null;\r\n    console.log(1);\r\n    return function (e: any) {\r\n      clearTimeout(timer);\r\n      timer = setTimeout(() => {\r\n        fn(e);\r\n      }, delay);\r\n    };\r\n  }\r\n\r\n  const handleModalMove = function (e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    console.log(3)\r\n    if (movable) {\r\n      const { clientX, clientY } = e.nativeEvent;\r\n      const { windowWidth, windowHeight, modalWidth, modalHeight } = calWindowModalSize();\r\n      const leftX = clientX - diffX > 0 ? (clientX - diffX > windowWidth - modalWidth ? (windowWidth - modalWidth) : (clientX - diffX)) : 0;\r\n      const topY = clientY - diffY > 0 ? (clientY - diffY > windowHeight - modalHeight ? (windowHeight - modalHeight) : (clientY - diffY)) : 0;\r\n      console.log(clientX, clientY);\r\n      modalWrapEl.current.style.cssText = `left: ${leftX}px; top: ${topY}px;`;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const handleModalMouseDown = function (e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    console.log(2);\r\n    movable = true;\r\n    clickClientX = e.nativeEvent.clientX;\r\n    clickClientY = e.nativeEvent.clientY;\r\n    const modalLeft = modalWrapEl.current.offsetLeft;\r\n    const modalTop = modalWrapEl.current.offsetTop;\r\n    diffX = clickClientX - modalLeft;\r\n    diffY = clickClientY - modalTop;\r\n  }\r\n\r\n  const handleModalMouseUp = function (e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n    movable = false;\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (modalWrapEl.current) {\r\n      const { windowWidth, windowHeight, modalWidth, modalHeight } = calWindowModalSize();\r\n      modalWrapEl.current.style.cssText = `left: ${(windowWidth - modalWidth) / 2}px; top: ${(windowHeight - modalHeight) / 2}px;`;\r\n    }\r\n  }, [visible])\r\n\r\n\r\n  return (\r\n\r\n    visible ? <ModalWrap>\r\n      <div\r\n        className={styles.modalWrap}\r\n        ref={modalWrapEl}\r\n      >\r\n        <div\r\n          className={styles.modalTitle}\r\n          onMouseDown={(e) => { handleModalMouseDown(e) }}\r\n          onMouseMove={(e) => { handleModalMove(e) }}\r\n          onMouseUp={(e) => { handleModalMouseUp(e) }}\r\n        >\r\n          <span className={styles.modalTitleText}>{title}</span>\r\n          <span className={styles.modalTitleBtn} onClick={() => { props.onCancle() }}>\r\n            <i className={classNames('fa fa-times')}></i>\r\n          </span>\r\n        </div>\r\n        <div>{children}</div>\r\n        <div className={styles.modalHandle}>\r\n          <div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </ModalWrap> : null\r\n\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Modal;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":3,"column":50,"nodeType":"75","messageId":"76","endLine":3,"endColumn":54},{"ruleId":"73","severity":1,"message":"77","line":6,"column":10,"nodeType":"75","messageId":"76","endLine":6,"endColumn":19},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"78","severity":1,"message":"79","line":31,"column":11,"nodeType":"80","endLine":31,"endColumn":29},{"ruleId":"73","severity":1,"message":"81","line":5,"column":22,"nodeType":"75","messageId":"76","endLine":5,"endColumn":32},{"ruleId":"73","severity":1,"message":"82","line":39,"column":10,"nodeType":"75","messageId":"76","endLine":39,"endColumn":29},{"ruleId":"73","severity":1,"message":"83","line":40,"column":10,"nodeType":"75","messageId":"76","endLine":40,"endColumn":20},{"ruleId":"73","severity":1,"message":"84","line":41,"column":10,"nodeType":"75","messageId":"76","endLine":41,"endColumn":18},{"ruleId":"73","severity":1,"message":"85","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":13},{"ruleId":"73","severity":1,"message":"86","line":2,"column":28,"nodeType":"75","messageId":"76","endLine":2,"endColumn":36},{"ruleId":"87","severity":1,"message":"88","line":19,"column":6,"nodeType":"89","endLine":19,"endColumn":8,"suggestions":"90"},{"ruleId":"73","severity":1,"message":"91","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":43},{"ruleId":"73","severity":1,"message":"86","line":1,"column":53,"nodeType":"75","messageId":"76","endLine":1,"endColumn":61},{"ruleId":"73","severity":1,"message":"92","line":19,"column":12,"nodeType":"75","messageId":"76","endLine":19,"endColumn":20},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'FetchData' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'withRouter' is defined but never used.","'showPhoneLoginModal' is assigned a value but never used.","'phoneValue' is assigned a value but never used.","'pwdValue' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'node'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'useLayoutEffect' is defined but never used.","'debounce' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [node]",{"range":"98","text":"99"},[490,492],"[node]"]